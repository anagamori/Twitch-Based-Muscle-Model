%==========================================================================
% excitation2dischargeRate.m
% Author: Akira Nagamori
% Last update: 3/5/19
% Descriptions:
%   Plot the relationship between excitation and discharge rate of
%   individual motor units
%==========================================================================
close all

cd('/Users/akiranagamori/Documents/GitHub/Twitch-Based-Muscle-Model/Model Parameters/Model_CTvsPTi');
%% Peak tension of muscle
density = 1.06; %
L0 = 6.8; % optimal muscle length [cm]
mass = 0.01; % muscle mass [kg]
PCSA = (mass*1000)/(density*L0); % PCSA of muscle
sigma = 31.8; % specific tension
F0 = PCSA * sigma; % maximal force

%% Number of motor unit
N_MU = 300; % number of motor units
i_MU = 1:N_MU; % index for motor units

%% Contraction time
% Generate a distribution of contraction time across motor units based on
% Rayleigh distribution
% rng(1)
% min_CT = 20; %minimum contraction time [ms]
% CT = round(raylrnd(23,1,N_MU)+min_CT); %contraction time of individual motor units [ms]
% CT_sorted = sort(CT,'descend');
load('CT_vec')
modelParameter.CT = CT_vec;

%% Peak tetanic force
RP_MU = 25; %range of peak tension across motor untis in unit of fold
b_MU = log(RP_MU)/N_MU; %coefficient to establish a range of twich force values
P_MU = exp(b_MU*i_MU); %force generated by a motor unit as a function of its recruitment threshold
PTi = P_MU./sum(P_MU)*F0; % peak tetanic force for individual units

%% Fractional PSCA
F_pcsa_slow = 0.3; % fractional PSCA of slow-twitch motor units (0-1)
[~, index_slow] = min(abs(cumsum(PTi) - F0*F_pcsa_slow)); rng(1)
%index_slow = 196;

%% Assign peak tetanic force into each unit
% shuffle indexes within each fiber type with respect to contraction time
% this will allow us to randomly assign peak tetanic tension to each motor
% unit with different contraction time
rng(1)
R_slow = randperm(index_slow);
index_fast = index_slow+1:N_MU;
R_fast_temp = randperm(length(index_fast));
R_fast = index_fast(R_fast_temp);
index_MU_PTi = [R_slow R_fast]; % vector of indexes to match peak tetanic tension to appropriate contraction time
PTi_new = PTi; % (index_MU_PTi);

%% Recruitment threshold
% Find recruitment threshold for individual units using exponential fit
% Recruitment threshold is correlated to peak tetanic tension
%   Use index_MU_PTi to appropriately index each MU
Ur = 0.5; % recruitment threshold for the lastly recruited motor unit
Ur_1 = 0.01; % reruitment threshold for the first unit
f_RT = fit([1 N_MU]',[Ur_1 Ur]','exp1');
coeffs_f_RT = coeffvalues(f_RT);
U_th = coeffs_f_RT(1)*exp(coeffs_f_RT(2)*i_MU); % the resulting recruitment threshold for individual units
U_th_new = U_th; %(index_MU_PTi);
[~,loc_max_U_th] = max(U_th_new);

%% FR_half for individual motor units
load('FR_half')
MDR = FR_half/2;
PDR = FR_half*2;

[~,index_DR_dif] = max(PDR-MDR);
%g_e = (PDR(index_DR_dif)-MDR(index_DR_dif))/(1-U_th_new(index_DR_dif));
g_e = max((PDR-MDR)./(1-U_th_new));
%g_e = 115.1750;
%% 
cd('/Users/akiranagamori/Documents/GitHub/Twitch-Based-Muscle-Model')

%% 
comb = nchoosek(1:300,2);
rng shuffle
for i = 1:1000
    index = randperm(size(comb,1),1);
    PDR_diff(i) = PDR(comb(index,2)) - PDR(comb(index,1));
    MDR_diff(i) = MDR(comb(index,2)) - MDR(comb(index,1));
    U_th_diff(i) = U_th_new(comb(index,2)) - U_th_new(comb(index,1));
end

%%
length(find(PDR_diff<0))/length(PDR_diff)
figure(1)
scatterhist(U_th_diff,PDR_diff,'Color','k')
xlim([-0.05 0.55])
hold on
plot([-0.05 0.8],[0 0],'r','linewidth',2)
xlabel('Difference in Recruitment Threshold (%Maximum)','FontSize',8)
ylabel('Difference in Peak Discharge Rate (Hz)','FontSize',8)
set(gca,'TickDir','out');
set(gca,'box','off')
ax = gca;
ax.FontSize = 6;
fig = gcf;
fig.PaperUnits = 'inches';
fig.PaperPosition = [0 0 3.34 3.34];

figure(2)
scatterhist(U_th_diff,MDR_diff,'Color','k')
xlim([-0.05 0.55])
hold on
plot([-0.05 0.8],[0 0],'r','linewidth',2)
xlabel('Difference in Recruitment Threshold (%Maximum)','FontSize',14)
ylabel('Difference in Peak Discharge Rate (Hz)','FontSize',14)
set(gca,'TickDir','out');
set(gca,'box','off')
ax = gca;
ax.FontSize = 10;


%%
clear U_th_diff
DR_MU = g_e.*(0.3-U_th_new)+MDR;
DR_MU(DR_MU<MDR) = 0;
DR_MU(DR_MU>PDR) = PDR(DR_MU>PDR);

comb = nchoosek(1:length(find(DR_MU>0)),2);
rng shuffle
for i = 1:1000
    index = randperm(size(comb,1),1);
    DR_diff(i) = DR_MU(comb(index,2)) - DR_MU(comb(index,1));
    U_th_diff(i) = U_th_new(comb(index,2)) - U_th_new(comb(index,1));
end

figure(3)
plot(U_th_new(1:length(find(DR_MU>0))),DR_MU(1:length(find(DR_MU>0))),'o')
xlabel('Recruitment Threshold (%Maximum)','FontSize',14)
ylabel('Discharge Rate (Hz)','FontSize',14)
set(gca,'TickDir','out');
set(gca,'box','off')
ax = gca;
ax.FontSize = 10;

figure(4)
scatterhist(U_th_diff,DR_diff,'Color','k')
hold on
plot([-0.05 0.5],[0 0],'r','linewidth',2)
xlabel('Difference in Recruitment Threshold (%Maximum)','FontSize',14)
ylabel('Difference in Discharge Rate (Hz)','FontSize',14)
set(gca,'TickDir','out');
set(gca,'box','off')
ax = gca;
ax.FontSize = 10;
